{"version":3,"file":"perfume.iife.js","sources":["../src/emulated-performance.ts","../node_modules/tti-polyfill/ [synthetic:util/global] ","../node_modules/tti-polyfill/ [synthetic:util/defineproperty] ","../node_modules/tti-polyfill/ [synthetic:es6/symbol] ","../node_modules/tti-polyfill/ [synthetic:es6/util/makeiterator] ","../node_modules/tti-polyfill/ [synthetic:es6/util/arrayfromiterable] ","../node_modules/tti-polyfill/ [synthetic:es6/util/arrayfromiterator] ","../node_modules/tti-polyfill/src/activityTrackerUtils.js","../node_modules/tti-polyfill/src/firstConsistentlyInteractiveCore.js","../node_modules/tti-polyfill/src/firstConsistentlyInteractiveDetector.js","../node_modules/tti-polyfill/src/umd-wrapper.js","../node_modules/tti-polyfill/src/index.js","../src/performance.ts","../src/perfume.ts"],"sourcesContent":["import PerformImpl from \"./performance-impl\";\n\ndeclare global {}\n\ninterface PerformancePaintTiming {\n  name: string;\n  entryType: string;\n  startTime: number;\n  duration: number;\n}\n\nexport default class EmulatedPerformance implements PerformImpl {\n  public config: any;\n\n  /**\n   * When performance API is not available\n   * returns Date.now that is limited to one-millisecond resolution.\n   *\n   * @type {number}\n   */\n  public now(): number {\n    return Date.now() / 1000;\n  }\n\n  /**\n   * @param {string} metricName\n   * @param {string} type\n   */\n  public mark(metricName: string, type: string) {\n    // Timeline won't be marked\n  }\n\n  /**\n   * @param {string} metricName\n   * @param {object} metrics\n   */\n  public measure(metricName: string, metrics: object): number {\n    return this.getDurationByMetric(metricName, metrics);\n  }\n\n  /**\n   * First Paint is essentially the paint after which\n   * the biggest above-the-fold layout change has happened.\n   * Uses setTimeout to retrieve FCP\n   *\n   * @param {any} cb\n   */\n  public firstContentfulPaint(cb: any) {\n    setTimeout(() => {\n      cb(this.getFirstPaint());\n    });\n  }\n\n  /**\n   * Get the duration of the timing metric or -1 if there a measurement has\n   * not been made by now() fallback.\n   *\n   * @param {string} metricName\n   * @param {metrics} any\n   */\n  private getDurationByMetric(metricName: string, metrics: any) {\n    const duration = metrics[metricName].end - metrics[metricName].start;\n    return duration || 0;\n  }\n\n  /**\n   * http://msdn.microsoft.com/ff974719\n   * developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/navigationStart\n   *\n   * @param {PerformancePaintTiming} performancePaintTiming\n   */\n  private getFirstPaint(): PerformancePaintTiming[] {\n    const navTiming = window.performance.timing;\n    const performancePaintTiming = {\n      duration: 0,\n      entryType: \"paint\",\n      name: \"first-contentful-paint\",\n      startTime: 0,\n    };\n    if (navTiming && navTiming.navigationStart !== 0) {\n      performancePaintTiming.startTime = Date.now() - navTiming.navigationStart;\n    }\n    return [performancePaintTiming];\n  }\n}\n",{"errno":-2,"code":"ENOENT","syscall":"open","path":"/home/dev/projects/perfume.js/node_modules/tti-polyfill/[synthetic:util/global]"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/home/dev/projects/perfume.js/node_modules/tti-polyfill/[synthetic:util/defineproperty]"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/home/dev/projects/perfume.js/node_modules/tti-polyfill/[synthetic:es6/symbol]"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/home/dev/projects/perfume.js/node_modules/tti-polyfill/[synthetic:es6/util/makeiterator]"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/home/dev/projects/perfume.js/node_modules/tti-polyfill/[synthetic:es6/util/arrayfromiterable]"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/home/dev/projects/perfume.js/node_modules/tti-polyfill/[synthetic:es6/util/arrayfromiterator]"},"// Copyright 2017 Google Inc. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\nlet uniqueId = 0;\n\n\n/**\n * Overrides the native XHR send method in order to keep track of in-flight\n * network requests.\n * @param {!Function} beforeXHRSendCb\n * @param {!Function} onRequestCompletedCb\n */\nexport function patchXMLHTTPRequest(beforeXHRSendCb, onRequestCompletedCb) {\n  const send = XMLHttpRequest.prototype.send;\n  const requestId = uniqueId++;\n\n  XMLHttpRequest.prototype.send = function(...args) { // No arrow function.\n    beforeXHRSendCb(requestId);\n    this.addEventListener('readystatechange', () => {\n      // readyState 4 corresponds to 'DONE'\n      if (this.readyState === 4) onRequestCompletedCb(requestId);\n    });\n    return send.apply(this, args);\n  };\n}\n\n\n/**\n * Overrides the native fetch() in order to keep track of in-flight network\n * requests.\n * @param {!Function} beforeRequestCb\n * @param {!Function} afterRequestCb\n */\nexport function patchFetch(beforeRequestCb, afterRequestCb) {\n  const originalFetch = fetch;\n\n  // TODO(philipwalton): assign this to a property of the global variable\n  // explicitely rather than implicitely.\n  // eslint-disable-next-line no-global-assign\n  fetch = (...args) => {\n    return new Promise((resolve, reject) => {\n      const requestId = uniqueId++;\n      beforeRequestCb(requestId);\n      originalFetch(...args).then(\n          (value) => {\n            afterRequestCb(requestId);\n            resolve(value);\n          },\n          (err) => {\n            afterRequestCb(err);\n            reject(err);\n          });\n    });\n  };\n}\n\n\n/** @type {!Array<string>} */\nconst requestCreatingNodeNames =\n    ['img', 'script', 'iframe', 'link', 'audio', 'video', 'source'];\n\n\n/**\n * Determines if a node or its descendants match one of the passed node names.\n * @param {!Array<!Node>|!NodeList<!Node>} nodes\n * @param {!Array<string>} nodeNames\n * @return {boolean}\n */\nfunction subtreeContainsNodeName(nodes, nodeNames) {\n  for (const node of nodes) {\n    if (nodeNames.includes(node.nodeName.toLowerCase()) ||\n        subtreeContainsNodeName(node.children, nodeNames)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n\n/**\n * Start observing DOM mutations for added nodes that may initiate network\n * requests.\n * @param {!Function} callback\n * @return {!MutationObserver}\n */\nexport function observeResourceFetchingMutations(callback) {\n  const mutationObserver = new MutationObserver((mutations) => {\n    // Typecast to fix: https://github.com/google/closure-compiler/issues/2539\n    // eslint-disable-next-line no-self-assign\n    mutations = /** @type {!Array<!MutationRecord>} */ (mutations);\n\n    for (const mutation of mutations) {\n      if (mutation.type == 'childList' &&\n          subtreeContainsNodeName(\n              mutation.addedNodes, requestCreatingNodeNames)) {\n        callback(mutation);\n      } else if (mutation.type == 'attributes' &&\n          requestCreatingNodeNames.includes(\n              mutation.target.tagName.toLowerCase())) {\n        callback(mutation);\n      }\n    }\n  });\n\n  mutationObserver.observe(document, {\n    attributes: true,\n    childList: true,\n    subtree: true,\n    attributeFilter: ['href', 'src'],\n  });\n\n  return mutationObserver;\n}\n","// Copyright 2017 Google Inc. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Computes the first consistently interactive value...\n * @param {number} searchStart\n * @param {number} minValue\n * @param {number} lastKnownNetwork2Busy\n * @param {number} currentTime\n * @param {!Array<{start: (number), end: (number)}>} longTasks\n * @return {number|null}\n */\nexport const computeFirstConsistentlyInteractive =\n    (searchStart, minValue, lastKnownNetwork2Busy, currentTime, longTasks) => {\n  // Have not reached network 2-quiet yet.\n  if ((currentTime - lastKnownNetwork2Busy) < 5000) return null;\n\n  const maybeFCI = longTasks.length === 0 ?\n      searchStart : longTasks[longTasks.length - 1].end;\n\n  // Main thread has not been quiet for long enough.\n  if (currentTime - maybeFCI < 5000) return null;\n\n  return Math.max(maybeFCI, minValue);\n};\n\n\n/**\n * Computes the time (in milliseconds since requestStart) that the network was\n * last known to have >2 requests in-flight.\n * @param {!Array<number>} incompleteRequestStarts\n * @param {!Array<{start: (number), end: (number)}>} observedResourceRequests\n * @return {number}\n */\nexport const computeLastKnownNetwork2Busy =\n      (incompleteRequestStarts, observedResourceRequests) => {\n  if (incompleteRequestStarts.length > 2) return performance.now();\n\n  const endpoints = [];\n  for (const req of observedResourceRequests) {\n    endpoints.push({\n      timestamp: req.start,\n      type: 'requestStart',\n    });\n    endpoints.push({\n      timestamp: req.end,\n      type: 'requestEnd',\n    });\n  }\n\n  for (const ts of incompleteRequestStarts) {\n    endpoints.push({\n      timestamp: ts,\n      type: 'requestStart',\n    });\n  }\n\n  endpoints.sort((a, b) => a.timestamp - b.timestamp);\n\n  let currentActive = incompleteRequestStarts.length;\n\n  for (let i = endpoints.length - 1; i >= 0; i--) {\n    const endpoint = endpoints[i];\n    switch (endpoint.type) {\n      case 'requestStart':\n        currentActive--;\n        break;\n      case 'requestEnd':\n        currentActive++;\n        if (currentActive > 2) {\n          return endpoint.timestamp;\n        }\n        break;\n      default:\n        throw Error('Internal Error: This should never happen');\n    }\n  }\n\n  // If we reach here, we were never network 2-busy.\n  return 0;\n};\n","// Copyright 2017 Google Inc. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/* global PerformanceObserver */\n\n\nimport * as activityTrackerUtils from './activityTrackerUtils.js';\nimport {log} from './debug.js';\nimport * as firstConsistentlyInteractiveCore\n    from './firstConsistentlyInteractiveCore.js';\n\n\n/**\n * Class to detect first consistently interactive.\n */\nexport default class FirstConsistentlyInteractiveDetector {\n  /**\n   * @param {!FirstConsistentlyInteractiveDetectorInit=} config\n   */\n  constructor(config = {}) {\n    this._useMutationObserver = !!config.useMutationObserver;\n\n    // If minValue is null, by default it is DOMContentLoadedEnd.\n    this._minValue = config.minValue || null;\n\n    /** @type {Array<PerformanceEntry>|undefined} */\n    const snippetEntries = window.__tti && window.__tti.e;\n\n    /** @type {PerformanceObserver|undefined} */\n    const snippetObserver = window.__tti && window.__tti.o;\n\n    // If we recorded some long tasks before this class was initialized,\n    // consume them now.\n    if (snippetEntries) {\n      log(`Consuming the long task entries already recorded.`);\n\n      this._longTasks = snippetEntries.map((performanceEntry) => {\n        return {\n          start: performanceEntry.startTime,\n          end: performanceEntry.startTime + performanceEntry.duration,\n        };\n      });\n    } else {\n      this._longTasks = [];\n    }\n\n    // If we had a long task observer attached by the snippet, disconnect it\n    // here. We will be adding a new long task observer soon with a more\n    // complex callback.\n    if (snippetObserver) {\n      snippetObserver.disconnect();\n    }\n\n    this._networkRequests = [];\n    this._incompleteJSInitiatedRequestStartTimes = new Map();\n\n    this._timerId = null;\n    this._timerActivationTime = -Infinity;\n\n    // Timer tasks are only scheduled when detector is enabled.\n    this._scheduleTimerTasks = false;\n\n    /** @type {?Function} */\n    this._firstConsistentlyInteractiveResolver = null;\n\n    /** @type {?PerformanceObserver} */\n    this._performanceObserver = null;\n\n    /** @type {?MutationObserver} */\n    this._mutationObserver = null;\n\n    this._registerListeners();\n  }\n\n  /**\n   * Starts checking for a first consistently interactive time and returns a\n   * promise that resolves to the found time.\n   * @return {!Promise<number>}\n   */\n  getFirstConsistentlyInteractive() {\n    return new Promise((resolve, reject) => {\n      this._firstConsistentlyInteractiveResolver = resolve;\n\n      if (document.readyState == 'complete') {\n        this.startSchedulingTimerTasks();\n      } else {\n        window.addEventListener('load', () => {\n          // You can use this to set a custom minimum value.\n          // this.setMinValue(20000);\n\n          this.startSchedulingTimerTasks();\n        });\n      }\n    });\n  }\n\n  /**\n   * Starts scheduling the timer that checks for network quiescence (a 5-second\n   * window of no more than 2 in-flight network requests).\n   */\n  startSchedulingTimerTasks() {\n    log(`Enabling FirstConsistentlyInteractiveDetector`);\n\n    this._scheduleTimerTasks = true;\n\n    const lastLongTaskEnd = this._longTasks.length > 0 ?\n        this._longTasks[this._longTasks.length - 1].end : 0;\n\n    const lastKnownNetwork2Busy =\n        firstConsistentlyInteractiveCore.computeLastKnownNetwork2Busy(\n            this._incompleteRequestStarts, this._networkRequests);\n\n    this.rescheduleTimer(\n        Math.max(lastKnownNetwork2Busy + 5000, lastLongTaskEnd));\n  }\n\n  /**\n   * Setter for the `_minValue` property.\n   * @param {number} minValue\n   */\n  setMinValue(minValue) {\n    this._minValue = minValue;\n  }\n\n  /**\n   * Resets the timer that checks for network quiescence.\n   * @param {number} earliestTime A timestamp in ms, and the time is relative\n   *     to navigationStart.\n   */\n  rescheduleTimer(earliestTime) {\n    // Check if ready to start looking for firstConsistentlyInteractive\n    if (!this._scheduleTimerTasks) {\n      log(`startSchedulingTimerTasks must be called before ` +\n          `calling rescheduleTimer`);\n\n      return;\n    }\n\n    log(`Attempting to reschedule FirstConsistentlyInteractive ` +\n        `check to ${earliestTime}`);\n    log(`Previous timer activation time: ${this._timerActivationTime}`);\n\n    if (this._timerActivationTime > earliestTime) {\n      log(`Current activation time is greater than attempted ` +\n          `reschedule time. No need to postpone.`);\n\n      return;\n    }\n    clearTimeout(this._timerId);\n    this._timerId = setTimeout(() => {\n      this._checkTTI();\n    }, earliestTime - performance.now());\n    this._timerActivationTime = earliestTime;\n\n    log(`Rescheduled firstConsistentlyInteractive check at ${earliestTime}`);\n  }\n\n  /**\n   * Removes all timers and event listeners.\n   */\n  disable() {\n    log(`Disabling FirstConsistentlyInteractiveDetector`);\n\n    clearTimeout(this._timerId);\n    this._scheduleTimerTasks = false;\n    this._unregisterListeners();\n  }\n\n  /**\n   * Adds\n   */\n  _registerPerformanceObserver() {\n    this._performanceObserver = new PerformanceObserver((entryList) => {\n      const entries = entryList.getEntries();\n      for (const entry of entries) {\n        if (entry.entryType === 'resource') {\n          this._networkRequestFinishedCallback(entry);\n        }\n        if (entry.entryType === 'longtask') {\n          this._longTaskFinishedCallback(entry);\n        }\n      }\n    });\n    this._performanceObserver.observe({entryTypes: ['longtask', 'resource']});\n  }\n\n  /**\n   * Registers listeners to detect XHR, fetch, resource timing entries, and\n   * DOM mutations to detect long tasks and network quiescence.\n   */\n  _registerListeners() {\n    activityTrackerUtils.patchXMLHTTPRequest(\n        this._beforeJSInitiatedRequestCallback.bind(this),\n        this._afterJSInitiatedRequestCallback.bind(this));\n\n    activityTrackerUtils.patchFetch(\n        this._beforeJSInitiatedRequestCallback.bind(this),\n        this._afterJSInitiatedRequestCallback.bind(this));\n\n    this._registerPerformanceObserver();\n\n    if (this._useMutationObserver) {\n      this._mutationObserver =\n          activityTrackerUtils.observeResourceFetchingMutations(\n              this._mutationObserverCallback.bind(this));\n    }\n  }\n\n  /**\n   * Removes all added listeners.\n   */\n  _unregisterListeners() {\n    // We will leave the XHR / Fetch objects the way they were,\n    // since we cannot guarantee they were not modified further in between.\n    // Only unregister performance observers.\n    if (this._performanceObserver) this._performanceObserver.disconnect();\n    if (this._mutationObserver) this._mutationObserver.disconnect();\n  }\n\n  /**\n   * A callback to be run before any new XHR requests. This adds the request\n   * to a map so in-flight requests can be tracked.\n   * @param {string} requestId\n   */\n  _beforeJSInitiatedRequestCallback(requestId) {\n    log(`Starting JS initiated request. Request ID: ${requestId}`);\n\n    this._incompleteJSInitiatedRequestStartTimes.set(\n        requestId, performance.now());\n\n    log(`Active XHRs: ${this._incompleteJSInitiatedRequestStartTimes.size}`);\n  }\n\n  /**\n   * A callback to be run once any XHR requests have completed. This removes\n   * the request from the in-flight request map.\n   * @param {string} requestId\n   */\n  _afterJSInitiatedRequestCallback(requestId) {\n    log(`Completed JS initiated request with request ID: ${requestId}`);\n\n    this._incompleteJSInitiatedRequestStartTimes.delete(requestId);\n\n    log(`Active XHRs: ${this._incompleteJSInitiatedRequestStartTimes.size}`);\n  }\n\n  /**\n   * A callback to be run once new resource timing entries are observed.\n   * This adds the entry to an array and resets the timeout detecting the\n   * quiet window.\n   * @param {PerformanceEntry} performanceEntry\n   */\n  _networkRequestFinishedCallback(performanceEntry) {\n    log(`Network request finished`, performanceEntry);\n\n    this._networkRequests.push({\n      start: performanceEntry.fetchStart,\n      end: performanceEntry.responseEnd,\n    });\n    this.rescheduleTimer(\n        firstConsistentlyInteractiveCore.computeLastKnownNetwork2Busy(\n            this._incompleteRequestStarts, this._networkRequests) + 5000);\n  }\n\n  /**\n   * A callback to be run once new long tasks are observed. This resets the\n   * timeout detecting the quiet window.\n   * @param {PerformanceEntry} performanceEntry\n   */\n  _longTaskFinishedCallback(performanceEntry) {\n    log(`Long task finished`, performanceEntry);\n\n    const taskEndTime = performanceEntry.startTime +\n          performanceEntry.duration;\n    this._longTasks.push({\n      start: performanceEntry.startTime,\n      end: taskEndTime,\n    });\n    this.rescheduleTimer(taskEndTime + 5000);\n  }\n\n  /**\n   * A callback to be run once any DOM elements are added that would initiate\n   * a new network request. This resets the timeout detecting the quiet window.\n   * @param {!MutationRecord} mutationRecord\n   */\n  _mutationObserverCallback(mutationRecord) {\n    log(`Potentially network resource fetching mutation detected`,\n        mutationRecord);\n\n    log(`Pushing back FirstConsistentlyInteractive check by 5 seconds.`);\n\n    this.rescheduleTimer(performance.now() + 5000);\n  }\n\n  /**\n   * Returns either a manually set min value or the time since\n   * domContentLoadedEventEnd and navigationStart. If the\n   * domContentLoadedEventEnd data isn't available, `null` is returned.\n   * @return {number|null}\n   */\n  _getMinValue() {\n    if (this._minValue) return this._minValue;\n\n    if (performance.timing.domContentLoadedEventEnd) {\n      const {domContentLoadedEventEnd, navigationStart} = performance.timing;\n      return domContentLoadedEventEnd - navigationStart;\n    }\n\n    return null;\n  }\n\n  /**\n   * Gets a list of all in-flight requests.\n   * @return {!Array}\n   */\n  get _incompleteRequestStarts() {\n    return [...this._incompleteJSInitiatedRequestStartTimes.values()];\n  }\n\n  /**\n   * Checks to see if a first consistently interactive time has been found.\n   * If one has been found, the promise resolver is invoked with the time. If\n   * no time has been found, the timeout detecting the quiet window is reset.\n   */\n  _checkTTI() {\n    log(`Checking if First Consistently Interactive was reached...`);\n\n    const navigationStart = performance.timing.navigationStart;\n    const lastBusy =\n        firstConsistentlyInteractiveCore.computeLastKnownNetwork2Busy(\n            this._incompleteRequestStarts, this._networkRequests);\n\n    // First paint is not available in non-chrome browsers at the moment.\n    const firstPaint = window.chrome && window.chrome.loadTimes ?\n        (window.chrome.loadTimes().firstPaintTime * 1000 - navigationStart) : 0;\n\n    const searchStart = firstPaint || (\n        performance.timing.domContentLoadedEventEnd - navigationStart);\n\n    const minValue = this._getMinValue();\n    const currentTime = performance.now();\n\n    // Ideally we will only start scheduling timers after DOMContentLoaded and\n    // this case should never be hit.\n    if (minValue === null) {\n      log(`No usable minimum value yet. Postponing check.`);\n\n      this.rescheduleTimer(Math.max(lastBusy + 5000, currentTime + 1000));\n    }\n\n    log(`Parameter values:`);\n    log(`NavigationStart`, navigationStart);\n    log(`lastKnownNetwork2Busy`, lastBusy);\n    log(`Search Start`, searchStart);\n    log(`Min Value`, minValue);\n    log(`Last busy`, lastBusy);\n    log(`Current time`, currentTime);\n    log(`Long tasks`, this._longTasks);\n    log(`Incomplete JS Request Start Times`, this._incompleteRequestStarts);\n    log(`Network requests`, this._networkRequests);\n\n    const maybeFCI =\n        firstConsistentlyInteractiveCore.computeFirstConsistentlyInteractive(\n            searchStart, /** @type {number} */ (minValue), lastBusy,\n            currentTime, this._longTasks);\n\n    if (maybeFCI) {\n      this._firstConsistentlyInteractiveResolver(\n          /** @type {number} */ (maybeFCI));\n      this.disable();\n    }\n\n    // First Consistently Interactive was not reached for whatever reasons.\n    // Check again in one second. Eventually we should become confident enough\n    // in our scheduler logic to get rid of this step.\n    log(`Could not detect First Consistently Interactive. ` +\n        `Retrying in 1 second.`);\n\n    this.rescheduleTimer(performance.now() + 1000);\n  }\n}\n","// Copyright 2017 Google Inc. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/* global define, module */\n\n\nimport {getFirstConsistentlyInteractive} from './index.js';\n\n\nconst moduleExport = {getFirstConsistentlyInteractive};\n\n\nif (typeof module != 'undefined' && module.exports) {\n  module.exports = moduleExport;\n} else if (typeof define === 'function' && define.amd) {\n  define('ttiPolyfill', [], () => moduleExport);\n} else {\n  window.ttiPolyfill = moduleExport;\n}\n","// Copyright 2017 Google Inc. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\nimport FirstConsistentlyInteractiveDetector\n    from './firstConsistentlyInteractiveDetector.js';\n\n\n/**\n * Returns a promise that resolves to the first consistently interactive time\n * (in milliseconds) or null if the browser doesn't support the features\n * required for detection.\n * @param {!FirstConsistentlyInteractiveDetectorInit=} opts Configuration\n *     options for the polyfill\n * @return {!Promise} TODO(philipwalton): for some reason the type\n *     {!Promise<(number|null)>} isn't working here, check if this is fixed in\n *     a new version of closure compiler.\n */\nexport const getFirstConsistentlyInteractive = (opts = {}) => {\n  if ('PerformanceLongTaskTiming' in window) {\n    const detector = new FirstConsistentlyInteractiveDetector(opts);\n    return detector.getFirstConsistentlyInteractive();\n  } else {\n    return Promise.resolve(null);\n  }\n};\n","import ttiPolyfill from \"tti-polyfill\";\nimport PerformImpl from \"./performance-impl\";\n\ndeclare global {\n  interface Window {\n    chrome: any;\n  }\n}\ndeclare const PerformanceObserver: any;\ndeclare interface PerformanceObserverEntryList {\n  getEntries: any;\n  getEntriesByName: any;\n  getEntriesByType: any;\n}\n\nexport default class Performance implements PerformImpl {\n\n  /**\n   * True if the browser supports the Navigation Timing API,\n   * User Timing API and the PerformanceObserver Interface.\n   * In Safari, the User Timing API (performance.mark()) is not available,\n   * so the DevTools timeline will not be annotated with marks.\n   * Support: developer.mozilla.org/en-US/docs/Web/API/Performance/mark\n   * Support: developer.mozilla.org/en-US/docs/Web/API/PerformanceObserver\n   *\n   * @type {boolean}\n   */\n  public static supported(): boolean {\n    return window.performance\n           && !!performance.now\n           && !!performance.mark;\n  }\n\n  /**\n   * For now only Chrome fully support the PerformanceObserver interface\n   * and the entryType \"paint\".\n   * Firefox 58: https://bugzilla.mozilla.org/show_bug.cgi?id=1403027\n   *\n   * @type {boolean}\n   */\n  public static supportedPerformanceObserver(): boolean {\n    return window.chrome;\n  }\n\n  /**\n   * True if the browser supports the PerformanceLongTaskTiming interface.\n   * Support: developer.mozilla.org/en-US/docs/Web/API/PerformanceLongTaskTiming\n   *\n   * @type {boolean}\n   */\n  public static supportedLongTask(): boolean {\n    return \"PerformanceLongTaskTiming\" in window;\n  }\n\n  public timeToInteractiveDuration: number = 0;\n  public config: any;\n  private ttiPolyfill: any;\n  private perfObserver: any;\n\n  constructor() {\n    this.ttiPolyfill = ttiPolyfill;\n  }\n\n  /**\n   * When performance API available\n   * returns a DOMHighResTimeStamp, measured in milliseconds, accurate to five\n   * thousandths of a millisecond (5 microseconds).\n   * @type {number}\n   */\n  public now(): number {\n    return window.performance.now();\n  }\n\n  /**\n   * @param {string} metricName\n   * @param {string} type\n   */\n  public mark(metricName: string, type: string) {\n    const mark = `mark_${metricName}_${type}`;\n    window.performance.mark(mark);\n  }\n\n  /**\n   * @param {string} metricName\n   * @param {object} metrics\n   * @param {string} endMark\n   */\n  public measure(metricName: string, metrics: object): any {\n    const startMark = `mark_${metricName}_start`;\n    const endMark = `mark_${metricName}_end`;\n    window.performance.measure(metricName, startMark, endMark);\n    return this.getDurationByMetric(metricName, metrics);\n  }\n\n  /**\n   * First Paint is essentially the paint after which\n   * the biggest above-the-fold layout change has happened.\n   * PerformanceObserver subscribes to performance events as they happen\n   * and respond to them asynchronously.\n   * entry.name will be either 'first-paint' or 'first-contentful-paint'\n   *\n   * @param {any} cb\n   */\n  public firstContentfulPaint(cb: any): any {\n    this.perfObserver = new PerformanceObserver(this.performanceObserverCb.bind(this, cb));\n    this.perfObserver.observe({entryTypes: [\"paint\"]});\n  }\n\n  /**\n   * Get the duration of the timing metric or -1 if there a measurement has\n   * not been made by the User Timing API\n   *\n   * @param {string} metricName\n   * @param {any} metrics\n   */\n  private getDurationByMetric(metricName: string, metrics: any) {\n    const entry = this.getMeasurementForGivenName(metricName);\n    if (entry && entry.entryType === \"measure\") {\n      return entry.duration;\n    }\n    return -1;\n  }\n\n  /**\n   * Return the last PerformanceEntry objects for the given name.\n   *\n   * @param {string} metricName\n   */\n  private getMeasurementForGivenName(metricName: string) {\n    const entries = window.performance.getEntriesByName(metricName);\n    return entries[entries.length - 1];\n  }\n\n  /**\n   * @param {any} cb\n   * @param {PerformanceObserverEntryList} entryList\n   */\n  private performanceObserverCb(cb: any, entryList: PerformanceObserverEntryList) {\n    const entries = entryList.getEntries();\n    cb(entries);\n    entries.forEach((performancePaintTiming: any) => {\n      if (this.config.firstContentfulPaint\n          && performancePaintTiming.name === \"first-contentful-paint\") {\n        this.perfObserver.disconnect();\n      }\n    });\n  }\n\n  /**\n   * The polyfill exposes a getFirstConsistentlyInteractive() method,\n   * which returns a promise that resolves with the TTI value.\n   *\n   * The getFirstConsistentlyInteractive() method accepts an optional\n   * startTime configuration option, allowing you to specify a lower bound\n   * for which you know your app cannot be interactive before.\n   * By default the polyfill uses DOMContentLoaded as the start time,\n   * but it's often more accurate to use something like the moment your hero elements\n   * are visible or the point when you know all your event listeners have been added.\n   *\n   * @param {number} minValue\n   * @param {any} cb\n   */\n  private timeToInteractive(minValue: number, cb: any) {\n    this.ttiPolyfill.getFirstConsistentlyInteractive({ minValue }).then(cb);\n  }\n}\n","/*!\n * Perfume.js v0.6.4 (http://zizzamia.github.io/perfume)\n * Copyright 2018 The Perfume Authors (https://github.com/Zizzamia/perfume.js/graphs/contributors)\n * Licensed under MIT (https://github.com/Zizzamia/perfume.js/blob/master/LICENSE)\n * @license\n */\nimport EmulatedPerformance from \"./emulated-performance\";\nimport Performance from \"./performance\";\nimport PerformImpl from \"./performance-impl\";\n\ndeclare global {\n  interface Window {\n    ga: any;\n  }\n}\n\nexport default class Perfume {\n  public config: {\n    firstContentfulPaint: boolean,\n    firstPaint: boolean,\n    googleAnalytics: {\n      enable: boolean;\n      timingVar: string;\n    },\n    logPrefix: string,\n    logging: boolean,\n    timeToInteractive: boolean,\n    timeToInteractiveCb?: any,\n  } = {\n    firstContentfulPaint: false,\n    firstPaint: false,\n    googleAnalytics: {\n      enable: false,\n      timingVar: \"name\",\n    },\n    logPrefix: \"⚡️ Perfume.js:\",\n    logging: true,\n    timeToInteractive: false,\n  };\n  public firstPaintDuration: number = 0;\n  public firstContentfulPaintDuration: number = 0;\n  public timeToInteractiveDuration: number = 0;\n  private metrics: {\n    [key: string]: {\n      start: number;\n      end: number;\n    };\n  } = {};\n  private perf: any;\n  private perfEmulated: any;\n\n  constructor(options: any = {}) {\n    this.firstContentfulPaintCb = this.firstContentfulPaintCb.bind(this);\n    this.timeToInteractiveCb    = this.timeToInteractiveCb.bind(this);\n\n    this.config = Object.assign({}, this.config, options);\n\n    // Init performance implementation\n    this.perf = Performance.supported() ? new Performance() : new EmulatedPerformance();\n    this.perf.config = this.config;\n\n    // Init First Contentful Paint\n    if (Performance.supportedPerformanceObserver()) {\n      this.perf.firstContentfulPaint(this.firstContentfulPaintCb);\n    } else {\n      this.perfEmulated = new EmulatedPerformance();\n      this.perfEmulated.firstContentfulPaint();\n    }\n  }\n\n  /**\n   * Start performance measurement\n   *\n   * @param {string} metricName\n   */\n  public start(metricName: string) {\n    if (!this.checkMetricName(metricName)) {\n      return;\n    }\n    if (this.metrics[metricName]) {\n      window.console.warn(this.config.logPrefix, \"Recording already started.\");\n      return;\n    }\n    this.metrics[metricName] = {\n      end: 0,\n      start: this.perf.now(),\n    };\n    this.perf.mark(metricName, \"start\");\n  }\n\n  /**\n   * End performance measurement\n   *\n   * @param {string} metricName\n   */\n  public end(metricName: string) {\n    if (!this.checkMetricName(metricName)) {\n      return;\n    }\n    if (!this.metrics[metricName]) {\n      window.console.warn(this.config.logPrefix, \"Recording already stopped.\");\n      return;\n    }\n    this.metrics[metricName].end = this.perf.now();\n    this.perf.mark(metricName, \"end\");\n    const duration = this.perf.measure(metricName, this.metrics);\n    if (this.config.logging) {\n      this.log(metricName, duration);\n    }\n    delete this.metrics[metricName];\n    this.sendTiming(metricName, duration);\n    return duration;\n  }\n\n  /**\n   * End performance measurement after first paint from the beging of it\n   *\n   * @param {string} metricName\n   */\n  public endPaint(metricName: string) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const duration = this.end(metricName);\n        resolve(duration);\n      });\n    });\n  }\n\n  /**\n   * Coloring Text in Browser Console\n   *\n   * @param {string} metricName\n   * @param {number} duration\n   */\n  public log(metricName: string, duration: number) {\n    if (!metricName) {\n      window.console.warn(this.config.logPrefix, \"Please provide a metric name\");\n      return;\n    }\n    const durationMs = duration.toFixed(2);\n    const style = \"color: #ff6d00;font-size:12px;\";\n    const text = `%c ${this.config.logPrefix} ${metricName} ${durationMs} ms`;\n    window.console.log(text, style);\n  }\n\n  /**\n   * @param {string} metricName\n   */\n  private checkMetricName(metricName: string) {\n    if (metricName) {\n      return true;\n    }\n    window.console.warn(this.config.logPrefix, \"Please provide a metric name\");\n    return false;\n  }\n\n  /**\n   * @param {object} entry\n   */\n  private firstContentfulPaintCb(entries: any) {\n    let firstContentfulPaintDuration;\n    entries.forEach((performancePaintTiming: any) => {\n      if (this.config.firstPaint\n          && performancePaintTiming.name === \"first-paint\") {\n        this.logFCP(performancePaintTiming.startTime, \"First Paint\", \"firstPaint\");\n      }\n      if (this.config.firstContentfulPaint\n          && performancePaintTiming.name === \"first-contentful-paint\") {\n        this.logFCP(performancePaintTiming.startTime, \"First Contentful Paint\", \"firstContentfulPaint\");\n      }\n      if (performancePaintTiming.name === \"first-contentful-paint\") {\n        firstContentfulPaintDuration = performancePaintTiming.startTime;\n      }\n    });\n    if (Performance.supported()\n        && Performance.supportedPerformanceObserver()\n        && Performance.supportedLongTask()\n        && this.config.timeToInteractive\n        && firstContentfulPaintDuration) {\n      this.perf.timeToInteractive(firstContentfulPaintDuration, this.timeToInteractiveCb);\n    }\n  }\n\n  /**\n   * @param {number} timeToInteractive\n   */\n  private timeToInteractiveCb(timeToInteractive: number) {\n    this.timeToInteractiveDuration = timeToInteractive;\n    if (this.timeToInteractiveDuration) {\n      this.log(\"Time to interactive\", this.timeToInteractiveDuration);\n    }\n    if (this.config.timeToInteractiveCb) {\n      this.config.timeToInteractiveCb(this.timeToInteractiveDuration);\n    }\n    this.sendTiming(\"timeToInteractive\", this.timeToInteractiveDuration);\n  }\n\n  /**\n   * @param {number} duration\n   */\n  private logFCP(duration: number, logText: string, metricName: string) {\n    if (metricName === \"firstPaint\") {\n      this.firstPaintDuration = duration;\n    }\n    if (metricName === \"firstContentfulPaint\") {\n      this.firstContentfulPaintDuration = duration;\n    }\n    this.log(logText, duration);\n    this.sendTiming(metricName, duration);\n  }\n\n  /**\n   * Sends the User timing measure to Google Analytics.\n   * ga('send', 'timing', [timingCategory], [timingVar], [timingValue])\n   * timingCategory: metricName\n   * timingVar: googleAnalytics.timingVar\n   * timingValue: The value of duration rounded to the nearest integer\n   * @param {string} metricName\n   * @param {number} duration\n   */\n  private sendTiming(metricName: string, duration: number) {\n    if (!this.config.googleAnalytics.enable) {\n      return;\n    }\n    if (!window.ga) {\n      window.console.warn(this.config.logPrefix, \"Google Analytics has not been loaded\");\n      return;\n    }\n    const durationInteger = Math.round(duration);\n    window.ga(\"send\", \"timing\", metricName, this.config.googleAnalytics.timingVar, durationInteger);\n  }\n}\n"],"names":["$jscomp.global","global","$jscomp.defineProperty","$jscomp.initSymbol","$jscomp.Symbol","$jscomp.symbolCounter_","$jscomp.SYMBOL_PREFIX","$jscomp.initSymbolIterator","$jscomp.arrayIterator","uniqueId","patchXMLHTTPRequest","beforeXHRSendCb","onRequestCompletedCb","send","XMLHttpRequest","prototype","requestId","XMLHttpRequest.prototype.send","addEventListener","readyState","apply","args","patchFetch","beforeRequestCb","afterRequestCb","originalFetch","fetch","Promise","resolve","reject","$jscomp.arrayFromIterable","then","value","err","requestCreatingNodeNames","subtreeContainsNodeName","nodes","nodeNames","$jscomp.makeIterator","node","includes","nodeName","toLowerCase","children","observeResourceFetchingMutations","callback","mutationObserver","MutationObserver","mutations","mutation","type","addedNodes","target","tagName","observe","document","attributes","childList","subtree","attributeFilter","computeLastKnownNetwork2Busy","incompleteRequestStarts","observedResourceRequests","length","now","endpoints","req","push","timestamp","start","end","ts","sort","a","b","currentActive","i","endpoint","constructor","config","_useMutationObserver","useMutationObserver","_minValue","minValue","snippetEntries","window","__tti","e","snippetObserver","o","_longTasks","map","performanceEntry","startTime","duration","disconnect","_networkRequests","_incompleteJSInitiatedRequestStartTimes","Map","_timerId","_timerActivationTime","Infinity","_scheduleTimerTasks","_mutationObserver","_performanceObserver","_firstConsistentlyInteractiveResolver","activityTrackerUtils.patchXMLHTTPRequest","_registerListeners","_beforeJSInitiatedRequestCallback","bind","_afterJSInitiatedRequestCallback","activityTrackerUtils.patchFetch","_registerPerformanceObserver","activityTrackerUtils.observeResourceFetchingMutations","_mutationObserverCallback","getFirstConsistentlyInteractive","startSchedulingTimerTasks","lastLongTaskEnd","lastKnownNetwork2Busy","firstConsistentlyInteractiveCore.computeLastKnownNetwork2Busy","_incompleteRequestStarts","rescheduleTimer","Math","max","earliestTime","clearTimeout","setTimeout","navigationStart","performance","timing","lastBusy","_checkTTI","searchStart","chrome","firstPaint","loadTimes","firstPaintTime","domContentLoadedEventEnd","currentTime","maybeFCI","longTasks","PerformanceObserver","entryList","getEntries","entries","entry","entryType","_networkRequestFinishedCallback","fetchStart","responseEnd","taskEndTime","_longTaskFinishedCallback","entryTypes","set","delete","$jscomp.global.Object.defineProperties","values","moduleExport","opts","detector","FirstConsistentlyInteractiveDetector","module","exports","define","amd","ttiPolyfill"],"mappings":"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"}